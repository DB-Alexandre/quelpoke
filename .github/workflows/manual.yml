name: Build and Push to Artifact Registry

on:
  push:
    branches:
      - main  # D√©clenchement automatique sur push vers main
  workflow_dispatch:  # Permet de l‚Äôex√©cuter manuellement

jobs:
  deploy:
    name: Build & Upload Artifact
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Configure Docker authentication
      run: gcloud auth configure-docker europe-west9-docker.pkg.dev

    - name: Define Image Version
      run: |
        IMAGE_VERSION=${{ github.sha }}
        echo "IMAGE_VERSION=$IMAGE_VERSION" >> $GITHUB_ENV

    - name: Build and Tag Docker Image
      run: |
        docker build -t europe-west9-docker.pkg.dev/cs-poc-hpzdycpiqjyvinhrczvlwcn/student-alexandre/pokemon:latest .
        docker tag europe-west9-docker.pkg.dev/cs-poc-hpzdycpiqjyvinhrczvlwcn/student-alexandre/pokemon:latest europe-west9-docker.pkg.dev/cs-poc-hpzdycpiqjyvinhrczvlwcn/student-alexandre/pokemon:$IMAGE_VERSION

    - name: Push Docker Images
      run: |
        docker push europe-west9-docker.pkg.dev/cs-poc-hpzdycpiqjyvinhrczvlwcn/student-alexandre/pokemon:latest
        docker push europe-west9-docker.pkg.dev/cs-poc-hpzdycpiqjyvinhrczvlwcn/student-alexandre/pokemon:$IMAGE_VERSION

    - name: Verify Image Exists in Artifact Registry
      run: |
        echo "üì° V√©rification des images disponibles sur Artifact Registry..."
        
        # Afficher la liste compl√®te des images stock√©es
        gcloud artifacts docker images list europe-west9-docker.pkg.dev/cs-poc-hpzdycpiqjyvinhrczvlwcn/student-alexandre \
          --format="table(IMAGE, DIGEST, CREATE_TIME)"

        # V√©rifier si une image contenant "pokemon" existe dans l‚ÄôIMAGE compl√®te
        IMAGE_FOUND=$(gcloud artifacts docker images list europe-west9-docker.pkg.dev/cs-poc-hpzdycpiqjyvinhrczvlwcn/student-alexandre \
          --format="value(IMAGE)" | grep -i "pokemon" || true)

        if [[ -z "$IMAGE_FOUND" ]]; then
          echo "‚ùå ERREUR : Aucune image contenant 'pokemon' n'a √©t√© trouv√©e sur Artifact Registry !"
          exit 1
        else
          echo "‚úÖ L'image Docker contenant 'pokemon' est bien pr√©sente sur Artifact Registry."
          echo "üì¶ Image trouv√©e : $IMAGE_FOUND"
        fi
    - name: Run Docker Container from Artifact Registry
      run: |
        echo "üê≥ T√©l√©chargement et ex√©cution de l‚Äôimage depuis Artifact Registry..."

        # R√©cup√©rer l‚Äôimage la plus r√©cente
        docker pull europe-west9-docker.pkg.dev/cs-poc-hpzdycpiqjyvinhrczvlwcn/student-alexandre/pokemon:latest

        # Lancer le conteneur en arri√®re-plan
        docker run -d --name pokemon -p 3000:8080 europe-west9-docker.pkg.dev/cs-poc-hpzdycpiqjyvinhrczvlwcn/student-alexandre/pokemon:latest

        # V√©rifier si le conteneur tourne bien
        docker ps

        echo "‚úÖ Conteneur Docker lanc√© avec succ√®s !"
