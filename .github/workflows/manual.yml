name: Build and Push to Artifact Registry

on:
  push:
    branches:
      - main  # D√©clenchement automatique sur push vers main
  workflow_dispatch:  # Permet de l‚Äôex√©cuter manuellement

jobs:
  deploy:
    name: Build & Upload Artifact
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Configure Docker authentication
      run: gcloud auth configure-docker europe-west9-docker.pkg.dev

    - name: Define Image Version
      run: |
        IMAGE_VERSION=${{ github.sha }}
        echo "IMAGE_VERSION=$IMAGE_VERSION" >> $GITHUB_ENV

    - name: Build and Tag Docker Image
      run: |
        docker build -t europe-west9-docker.pkg.dev/cs-poc-hpzdycpiqjyvinhrczvlwcn/student-alexandre/my-app:latest .
        docker tag europe-west9-docker.pkg.dev/cs-poc-hpzdycpiqjyvinhrczvlwcn/student-alexandre/my-app:latest europe-west9-docker.pkg.dev/cs-poc-hpzdycpiqjyvinhrczvlwcn/student-alexandre/my-app:$IMAGE_VERSION

    - name: Push Docker Images
      run: |
        docker push europe-west9-docker.pkg.dev/cs-poc-hpzdycpiqjyvinhrczvlwcn/student-alexandre/my-app:latest
        docker push europe-west9-docker.pkg.dev/cs-poc-hpzdycpiqjyvinhrczvlwcn/student-alexandre/my-app:$IMAGE_VERSION

    - name: Verify Image Exists in Artifact Registry
      run: |
        echo "üì° V√©rification des images disponibles sur Artifact Registry..."
        
        # Afficher toutes les images disponibles
        gcloud artifacts docker images list europe-west9-docker.pkg.dev/cs-poc-hpzdycpiqjyvinhrczvlwcn/student-alexandre \
          --format="table(DISPLAY_NAME, TAGS, CREATE_TIME)"
        
        # V√©rifier si l'image sp√©cifique est pr√©sente
        IMAGE_FOUND=$(gcloud artifacts docker images list europe-west9-docker.pkg.dev/cs-poc-hpzdycpiqjyvinhrczvlwcn/student-alexandre \
          --format="value(DISPLAY_NAME)" | grep -w "pokemon" || true)

        if [[ -z "$IMAGE_FOUND" ]]; then
          echo "‚ùå ERREUR : L'image 'pokemon' n'a PAS √©t√© trouv√©e sur Artifact Registry !"
          exit 1
        else
          echo "‚úÖ L'image Docker 'pokemon' est bien pr√©sente sur Artifact Registry."
        fi

