name: Build, Test, Push & Run Docker Container

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: Build, Test & Upload Artifact
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Configure Docker authentication
      run: gcloud auth configure-docker europe-west9-docker.pkg.dev

    - name: Define Image Version
      run: |
        IMAGE_VERSION=${{ github.sha }}
        echo "IMAGE_VERSION=$IMAGE_VERSION" >> $GITHUB_ENV

    - name: Build Docker Image Locally (Test)
      run: |
        echo "🐳 Build de l'image Docker pour test..."
        docker build -t pokemon-local .

    - name: Run Docker Container Locally (Test)
      run: |
        echo "🚀 Lancement du conteneur en test..."
        docker run -d --name pokemon-test -p 8080:8080 pokemon-local

    - name: Check if Container is Running
      run: |
        sleep 5  # Attente du démarrage
        if ! docker ps | grep -q "pokemon-test"; then
          echo "❌ ERREUR : Le conteneur ne s'est pas lancé correctement."
          exit 1
        fi
        echo "✅ Conteneur en test lancé avec succès !"

    - name: Verify Application Response
      run: |
        sleep 5
        if curl -s http://localhost:8080 > /dev/null; then
          echo "✅ Le serveur répond correctement sur http://localhost:8080"
        else
          echo "❌ ERREUR : Le serveur ne répond pas sur http://localhost:8080"
          docker logs pokemon-test
          exit 1
        fi

    - name: Stop and Remove Test Container
      run: |
        echo "🛑 Nettoyage du conteneur de test..."
        docker stop pokemon-test
        docker rm pokemon-test

    - name: Build and Tag Docker Image for Deployment
      run: |
        docker build -t europe-west9-docker.pkg.dev/cs-poc-hpzdycpiqjyvinhrczvlwcn/student-alexandre/pokemon:latest .
        docker tag europe-west9-docker.pkg.dev/cs-poc-hpzdycpiqjyvinhrczvlwcn/student-alexandre/pokemon:latest europe-west9-docker.pkg.dev/cs-poc-hpzdycpiqjyvinhrczvlwcn/student-alexandre/pokemon:$IMAGE_VERSION

    - name: Push Docker Images (if tests pass)
      run: |
        docker push europe-west9-docker.pkg.dev/cs-poc-hpzdycpiqjyvinhrczvlwcn/student-alexandre/pokemon:latest
        docker push europe-west9-docker.pkg.dev/cs-poc-hpzdycpiqjyvinhrczvlwcn/student-alexandre/pokemon:$IMAGE_VERSION

    - name: Deploy to Remote Server
      run: |
        echo "🔑 Configuration SSH..."
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keyscan -p 2666 -H 213.246.39.240 >> ~/.ssh/known_hosts

        echo "🚀 Connexion au serveur et déploiement..."
        ssh -i ~/.ssh/deploy_key -p 2666 dockeruser@213.246.39.240 << 'EOF'
          set -e
          echo "📥 Pulling latest image from Artifact Registry..."
          docker pull europe-west9-docker.pkg.dev/cs-poc-hpzdycpiqjyvinhrczvlwcn/student-alexandre/my-app:latest

          echo "🛑 Arrêt et suppression de l'ancien conteneur..."
          docker stop pokemon-container || true
          docker rm pokemon-container || true

          echo "🐳 Démarrage du nouveau conteneur..."
          docker run -d --name pokemon-container -p 3000:8080 europe-west9-docker.pkg.dev/cs-poc-hpzdycpiqjyvinhrczvlwcn/student-alexandre/pokemon:latest

          echo "✅ Déploiement terminé avec succès !"
        EOF
